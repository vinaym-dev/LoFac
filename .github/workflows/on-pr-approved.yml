name: Super Commit on PR approval

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: write  # needed to repository_dispatch Auto PR

jobs:
  on_approval:
    if: >
      github.event.review.state == 'approved' &&
      startsWith(github.event.pull_request.head.ref, 'feature/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Derive Jira key from branch
        id: vars
        shell: bash
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          if [[ "$BRANCH" =~ ([A-Z]+-[0-9]+) ]]; then
            echo "key=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          else
            echo "key=" >> $GITHUB_OUTPUT
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          fi

      - name: Transition Build → Validate Test (no Tempo log)
        id: supercommit
        if: ${{ steps.vars.outputs.key != '' }}
        env:
          # 👇 Omit LOG to avoid parser failure on 0 hours
          COMMIT_MESSAGE: "${{ steps.vars.outputs.key }} STATUS:Validate Test COMMENT:Auto transition on PR approval"
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          TEMPO_TOKEN: ${{ secrets.TEMPO_TOKEN }}
          TEMPO_AUTHOR_ACCOUNT_ID: ${{ secrets.TEMPO_AUTHOR_ACCOUNT_ID }}
          DRY_RUN: "false"
        run: |
          # Make COMMIT_MESSAGE also available to later steps (dispatch body, if needed)
          {
            echo 'COMMIT_MESSAGE<<EOF'
            echo "$COMMIT_MESSAGE"
            echo 'EOF'
          } >> "$GITHUB_ENV"

          # Run the Super Commit script (it sets create_pr=yes/no via $GITHUB_OUTPUT)
          node scripts/supercommit/index.js

      # 🚀 Dispatch Auto PR workflow ONLY when Super Commit decided so (and not dry-run)
      - name: Signal Auto PR (repository_dispatch)
        if: ${{ steps.supercommit.outputs.create_pr == 'yes' && env.DRY_RUN != 'true' }}
        uses: actions/github-script@v7
        env:
          BRANCH: ${{ steps.vars.outputs.branch }}
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            await github.rest.repos.createDispatchEvent({
              owner, repo,
              event_type: 'supercommit-pr-request',
              client_payload: {
                branch: process.env.BRANCH,
                sha: context.payload.pull_request.head.sha,
                message: process.env.COMMIT_MESSAGE || ''
              }
            });
            core.info('Dispatched repository_dispatch: supercommit-pr-request');